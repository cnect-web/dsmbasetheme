<?php

/**
 * @file
 * Functions to support theming in the dsmbasetheme theme.
 */

declare(strict_types = 1);

use Drupal\Component\Utility\Html;
use Drupal\Core\Cache\CacheableMetadata;
use Drupal\Core\Render\Element;
use Drupal\Component\Utility\Random;

/**
 * Implements hook_preprocess_breadcrumb().
 */
function dsmbasetheme_preprocess_breadcrumb(&$variables) {
  $request     = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  $title       = \Drupal::service('title_resolver')
    ->getTitle($request, $route_match->getRouteObject());

  $variables['segments'] = array_map(function ($item) {
    return [
      'href' => $item['url'],
      'label' => $item['text'],
    ];
  }, $variables['breadcrumb']);

  // Add the title to the segments only if it's not empty.
  if (!empty($title)) {
    $variables['segments'][] = [
      'label' => $title,
    ];
  }
}

/**
 * Implements hook_preprocess_menu__main().
 */
function dsmbasetheme_preprocess_menu__main(&$variables) {
  // Massage data to be compliant with ECL navigation menu data structure.
  $variables['links'] = array_map(function ($item) {
    return [
      'href' => $item['url'],
      'label' => $item['title'],
      'is_active' => $item['in_active_trail'],
    ];
  }, $variables['items']);

  foreach ($variables['items'] as $name => $link) {
    $variables['links'][$name]['children_links'] = array_map(function ($item) {
      return [
        'links' => [[
          'href' => $item['url'],
          'label' => $item['title'],
          'is_active' => $item['in_active_trail'],
        ],
        ],
      ];
    }, $variables['items'][$name]['below']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function dsmbasetheme_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');
if ('language_selection_page' == \Drupal::request()->attributes->get('_route')) {
    $variables['attributes']['class'][] = 'page-splash';
  }

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function dsmbasetheme_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function dsmbasetheme_preprocess_page(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function dsmbasetheme_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function dsmbasetheme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function dsmbasetheme_preprocess_block(array &$variables) {


}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function dsmbasetheme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function dsmbasetheme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function dsmbasetheme_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function dsmbasetheme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function dsmbasetheme_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function dsmbasetheme_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function dsmbasetheme_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function dsmbasetheme_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function dsmbasetheme_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function dsmbasetheme_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}


/**
 * Implements hook_preprocess_HOOK().
 */
function dsmbasetheme_preprocess_pattern_link_block(&$variables) {
  // Format links in order to respect ECL expectations.
  foreach ($variables['links'] as $key => $link) {
    $variables['links'][$key]['href'] = $link['url'];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function _dsmbasetheme_preprocess_pattern_social_media_links(&$variables) {
  // Format social media links in order to respect ECL expectations.
  foreach ($variables['links'] as $key => $link) {
    $variables['links'][$key]['variant'] = $link['service'];
    $variables['links'][$key]['link'] = [
      'label' => $link['label'],
      'href' => $link['url'],
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsmbasetheme_preprocess_pattern_social_media_links_vertical(&$variables) {
  _oe_theme_preprocess_pattern_social_media_links($variables);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dsmbasetheme_preprocess_pattern_social_media_links_horizontal(&$variables) {
  _oe_theme_preprocess_pattern_social_media_links($variables);
}
